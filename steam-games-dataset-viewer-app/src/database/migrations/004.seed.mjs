const steam = await import('../seed-data/steam-data.mjs');

export async function up(sql) {
  Object.keys(steam.games).map(async (key) => {
    const game = steam.games[key];

  //   await sql`
  //     INSERT INTO source_steam_games (
  //       game_id,
  //       name,
  //       price,
  //       short_description,
  //       header_image,
  //       website,
  //       genres,
  //       positive,
  //       negative,
  //       release_date,
  //       required_age,
  //       dlc_count,
  //       detailed_description,
  //       about_the_game,
  //       reviews,
  //       support_url,
  //       support_email,
  //       windows,
  //       mac,
  //       linux,
  //       metacritic_score,
  //       metacritic_url,
  //       achievements,
  //       recommendations,
  //       notes,
  //       supported_languages,
  //       full_audio_languages,
  //       developers,
  //       publishers,
  //       categories,
  //       screenshots,
  //       movies,
  //       user_score,
  //       score_rank,
  //       estimated_owners,
  //       average_playtime_forever,
  //       average_playtime_2weeks,
  //       median_playtime_forever,
  //       median_playtime_2weeks,
  //       peak_ccu,
  //       tags
  //     ) VALUES (
  //       ${key},
  //       ${game.name},
  //       ${game.price},
  //       ${game.short_description},
  //       ${game.header_image},
  //       ${game.website},
  //       ${game.genres},
  //       ${game.positive},
  //       ${game.negative},
  //       ${game.release_date},
  //       ${game.required_age},
  //       ${game.dlc_count},
  //       ${game.detailed_description},
  //       ${game.about_the_game},
  //       ${game.reviews},
  //       ${game.support_url},
  //       ${game.support_email},
  //       ${game.windows},
  //       ${game.mac},
  //       ${game.linux},
  //       ${game.metacritic_score},
  //       ${game.metacritic_url},
  //       ${game.achievements},
  //       ${game.recommendations},
  //       ${game.notes},
  //       ${game.supported_languages},
  //       ${game.full_audio_languages},
  //       ${game.developers},
  //       ${game.publishers},
  //       ${game.categories},
  //       ${game.screenshots},
  //       ${game.movies},
  //       ${game.user_score},
  //       ${game.score_rank},
  //       ${game.estimated_owners},
  //       ${game.average_playtime_forever},
  //       ${game.average_playtime_2weeks},
  //       ${game.median_playtime_forever},
  //       ${game.median_playtime_2weeks},
  //       ${game.peak_ccu},
  //       ${JSON.stringify(game.tags)}::jsonb 
  //       )
  //       ON CONFLICT (game_id) DO NOTHING;
  // `;

    await sql`
      INSERT INTO games (
        game_id,
        name,
        price,
        short_description,
        header_image,
        website,
        genres,
        positive,
        negative
      ) VALUES (
        ${key},
        ${game.name},
        ${game.price},
        ${game.short_description},
        ${game.header_image},
        ${game.website},
        ${game.genres},
        ${game.positive},
        ${game.negative}
        )
        ON CONFLICT (game_id) DO NOTHING;
    `;

    await sql`
      INSERT INTO game_details (
        game_id,
        release_date,
        required_age,
        dlc_count,
        detailed_description,
        about_the_game,
        reviews,
        support_url,
        support_email,
        windows,
        mac,
        linux,
        metacritic_score,
        metacritic_url,
        achievements,
        recommendations,
        notes,
        supported_languages,
        full_audio_languages,
        developers,
        publishers,
        categories,
        screenshots,
        movies,
        user_score,
        score_rank,
        estimated_owners,
        average_playtime_forever,
        average_playtime_2weeks,
        median_playtime_forever,
        median_playtime_2weeks,
        peak_ccu,
        tags
      ) VALUES (
        ${key},
        ${game.release_date},
        ${game.required_age},
        ${game.dlc_count},
        ${game.detailed_description},
        ${game.about_the_game},
        ${game.reviews},
        ${game.support_url},
        ${game.support_email},
        ${game.windows},
        ${game.mac},
        ${game.linux},
        ${game.metacritic_score},
        ${game.metacritic_url},
        ${game.achievements},
        ${game.recommendations},
        ${game.notes},
        ${game.supported_languages},
        ${game.full_audio_languages},
        ${game.developers},
        ${game.publishers},
        ${game.categories},
        ${game.screenshots},
        ${game.movies},
        ${game.user_score},
        ${game.score_rank},
        ${game.estimated_owners},
        ${game.average_playtime_forever},
        ${game.average_playtime_2weeks},
        ${game.median_playtime_forever},
        ${game.median_playtime_2weeks},
        ${game.peak_ccu},
        ${JSON.stringify(game.tags)}::jsonb 
      )
    `;
  });
}

export async function down(sql) {
  await sql`
    TRUNCATE TABLE games CASCADE`;
}
